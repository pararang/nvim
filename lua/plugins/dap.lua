return {}
-- return {
--     'mfussenegger/nvim-dap',
--     dependencies = {
--         -- Creates a beautiful debugger UI
--         'rcarriga/nvim-dap-ui',

--         -- Required dependency for nvim-dap-ui
--         'nvim-neotest/nvim-nio',

--         -- Installs the debug adapters for you
--         'mason-org/mason.nvim',
--         'jay-babu/mason-nvim-dap.nvim',

--         -- Add your own debuggers here
--         'leoluz/nvim-dap-go',
--     },
--     keys = {
--         -- Basic debugging keymaps, feel free to change to your liking!
--         {
--             '<leader>Dc',
--             function()
--                 require('dap').continue()
--             end,
--             desc = 'Debug: Start/Continue',
--         },
--         {
--             '<leader>Dsi',
--             function()
--                 require('dap').step_into()
--             end,
--             desc = 'Debug: Step Into',
--         },
--         {
--             '<leader>DsO',
--             function()
--                 require('dap').step_over()
--             end,
--             desc = 'Debug: Step Over',
--         },
--         {
--             '<leader>Dso',
--             function()
--                 require('dap').step_out()
--             end,
--             desc = 'Debug: Step Out',
--         },
--         {
--             '<leader>Db',
--             function()
--                 require('dap').toggle_breakpoint()
--             end,
--             desc = 'Debug: Toggle Breakpoint',
--         },
--         {
--             '<leader>DB',
--             function()
--                 require('dap').set_breakpoint(vim.fn.input 'Breakpoint condition: ')
--             end,
--             desc = 'Debug: Set Breakpoint',
--         },
--         -- Toggle to see last session result. Without this, you can't see session output in case of unhandled exception.
--         {
--             '<leader>Dt',
--             function()
--                 require('dapui').toggle()
--             end,
--             desc = 'Debug: See last session result.',
--         },
--     },
--     config = function()
--         local dap = require 'dap'
--         local dapui = require 'dapui'


--         -- Dap UI setup
--         -- For more information, see |:help nvim-dap-ui|
--         dapui.setup {
--             -- Set icons to characters that are more likely to work in every terminal.
--             --    Feel free to remove or use ones that you like more! :)
--             --    Don't feel like these are good choices.
--             icons = { expanded = '▾', collapsed = '▸', current_frame = '*' },
--             controls = {
--                 icons = {
--                     pause = '⏸',
--                     play = '▶',
--                     step_into = '⏎',
--                     step_over = '⏭',
--                     step_out = '⏮',
--                     step_back = 'b',
--                     run_last = '▶▶',
--                     terminate = '⏹',
--                     disconnect = '⏏',
--                 },
--             },
--         }

--         dap.listeners.after.event_initialized['dapui_config'] = dapui.open
--         dap.listeners.before.event_terminated['dapui_config'] = dapui.close
--         dap.listeners.before.event_exited['dapui_config'] = dapui.close

--         -- Install golang specific config
--         require('dap-go').setup({
--             dap_configurations = {
--                 {
--                     -- Must be "go" or it will be ignored by the plugin
--                     type = "go",
--                     name = "Attach remote",
--                     mode = "remote",
--                     request = "attach",
--                 },
--                 {
--                     type = "go",
--                     name = "Debug (Build Flags)",
--                     request = "launch",
--                     program = "${file}",
--                     buildFlags = require("dap-go").get_build_flags,
--                 },
--                 {
--                     type = "go",
--                     name = "Debug (Build Flags & Arguments)",
--                     request = "launch",
--                     program = "${file}",
--                     args = require("dap-go").get_arguments,
--                     buildFlags = require("dap-go").get_build_flags,
--                 },
--             },
--             delve = {
--                 -- using homebrew
--                 path = "/opt/homebrew/bin/dlv",
--             }
--         })
--     end,
-- }
